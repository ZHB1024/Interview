
https://www.jianshu.com/p/bcc614524024

MySQL 事务（Database Transaction）
是指作为单个逻辑工作单元执行的一系列操作，要么完全执行，要么完全地不执行。

ACID
原子性（Atomicity）
原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚。
一致性（Consistency）
一致性是指事务必须使数据库从一个一致的状态变到另外一个一致的状态，
也就是执行事务之前和之后的状态都必须处于一致的状态。

隔离性(Isolation)
隔离性是指当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，
不能被其他事务的操作所干扰，多个并发事务之间要相互隔离

持久性(Durability)
持久性是指一个事务一旦被提交了，那么对于数据库中的数据改变就是永久性的，
即便是在数据库系统遭遇到故障的情况下也不会丢失提交事务的操作。


如果没有隔离，会发生的几种问题
脏读（Dirty Read）
一个事务处理过程里读取了另一个未提交的事务中的数据

不可重复读（NonRepeatable Read）
对于数据库中的某个数据，一个事务范围内多次查询却返回了不同的数据值，
这是由于在查询的间隔期间，另外一个事务修改并提交了该数据

幻读（Phantom Read）
在一个事务中读取到了别的事务插入的数据，导致前后不一致


查看当前事务的隔离级别
>select @@tx_isolation;

修改事务的隔离级别
>set  [global | session]  transaction isolation level 隔离级别名称;
>set tx_isolation=’隔离级别名称;

隔离级别：Serializable | Repeatable read | Read committed |
Read uncommitted
注意：
设置默认级别是指当前session的下一个事务
设置session级别是指当前session以后的所有事务
设置global级别是指对之后的所有session，不包括当前session


MySQL的锁类型

表锁
对一整张表加锁，并发能力低下（即使有分读锁、写锁），一般在DDL处理时使用

行锁
只锁住特定行的数据，并发能力强，MySQL一般都是用行锁来处理并发事务。

GAP锁（间隙锁）
是MySQL使用索引对行锁两边的区间进行加锁，避免其他事务在这两个区间insert的一种锁。

Next-Key锁
Next-Key锁是行锁和GAP锁的合并（MySQL使用它来避免幻读）

MVCC(多版本并发控制）
Innodb中的乐观锁实现。通过它提高MySQL的读取操作的性能。并能解决MySQL的重复读问题。
MVCC在每一行记录的后面加两个隐含列（记录创建版本号和删除版本号）。
这里的版本号指的是事务的版本号（每个事务启动的时候，都有一个递增的版本号）。

Innodb中事务隔离级别和锁的关系
Innodb通过使用不同的锁来实现事务隔离

避免脏读
通过对数据加行锁或则表锁，使对同一数据进行操作的事务处于等待状态，来避免同时操作

避免不可重复读
通过MVCC实现事务的可重复读

避免幻读
通过Next-Key锁避免产生幻读现象
MySQL在RC和RR中都避免了幻读现象。
