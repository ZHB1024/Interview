TCP（Transmission Control Protocol 传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议。
工作在传输层，TCP之所以可靠，是因为它保证了传送数据包的顺序。

SYN：同步标志  表示SYN报文（在建立TCP连接的时候使用），同步序列编号(Synchronize Sequence Numbers)栏有效。
ACK：确认标志  表示Acknowledgment Number字段有意义，确认编号(Acknowledgement Number)栏有效。
FIN：表示没有数据需要发送了（在关闭TCP连接的时候使用）

TCP三次握手建立连接的过程如下：
1、客户端发送SYN（SEQ=x）报文给服务器端，进入SYN_SEND状态。
2、服务器端收到SYN报文，回应一个SYN （SEQ=y）ACK(ACK=x+1）报文，进入SYN_RECV状态。
3、客户端收到服务器端的SYN报文，回应一个ACK(ACK=y+1）报文，进入Established状态。
三次握手完成，TCP客户端和服务器端成功地建立连接，可以开始传输数据了。


终止一个连接要经过四次握手，这是由TCP的半关闭（half-close）造成的：
(1) 某个应用进程首先调用close，称该端执行“主动关闭”（active close）。该端的TCP于是发送一个FIN分节，表示数据发送完毕。
(2) 接收到这个FIN的对端执行 “被动关闭”（passive close），这个FIN由TCP确认。
注意：FIN的接收也作为一个文件结束符（end-of-file）传递给接收端应用进程，放在已排队等候该应用进程接收的任何其他数据之后，因为，FIN的接收意味着接收端应用进程在相应连接上再无额外数据可接收。
(3) 一段时间后，接收到这个文件结束符的应用进程将调用close关闭它的套接字。这导致它的TCP也发送一个FIN。
(4) 接收这个最终FIN的原发送端TCP（即执行主动关闭的那一端）确认这个FIN。[1] 
既然每个方向都需要一个FIN和一个ACK，因此通常需要4个分节。

无论是客户还是服务器，任何一端都可以执行主动关闭。通常情况是，客户执行主动关闭，但是某些协议，例如，HTTP/1.0却由服务器执行主动关闭。